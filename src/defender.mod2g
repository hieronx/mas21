module defender[exit=noaction] {	
  program {
		% If role changes then 
		if not( bel( role(defender)) ), a-goal( defend(UnrealID) )
			then drop( defend(UnrealID) ) + exit-module.

		% also exit without a target
		if not( bel( role(defender)) )
			then exit-module.
		
    % If the bot sees any dropped flag, or the enemy flag in their base go to module seeFlag
    if bel( flag(_, none, _) )
      then seeFlag.

    % If the agent already has a goal to kill a bot but receives another message from the manager to kill someone else
    % then the previous target  a goal is set to kill this person
    if bel( received( target(UnrealID ) ) ), a-goal( defend(OldUnrealID) )
      then drop( defend(OldUnrealID) ) 
      + delete( received( target(UnrealID) ) ) 
      + adopt( defend(UnrealID) ).

    % If a killtarget is received from the manager and there was no previous killtarget
    % then adopt the goal of killing the person and delete the received from beliefs
    if bel( received( target(UnrealID ) ) )
      then adopt( defend(UnrealID) ) 
      + delete( received( target(UnrealID) ) ).

		% Go to the bot to defend if further away than 100
		% todo: use the path of the bot
		if bel( a-goal(defend(UnrealID)), distance(UnrealID, Distance), Distance > 100, bot(UnrealID, _, _, BotLoc, _, _)), not( bel( navigation(navigating, BotLoc) ))
			then navigate(BotLoc).	
  	
  	if true
      then skip.
  }
}
