module flag_capturer[exit=always] {
  program {
  	% If the bot sees any dropped flag, or the enemy flag in their base go to module seeFlag
  	if bel( flag(_, none, _) )
		  then seeFlag.
			
  	% if adrenaline is 100, there is a usefull combo and this is a good timing for that combo
  	if bel(status(_, _, 100, _), usefullCombo(Combo), goodComboTiming(Combo))
  		then combo(Combo).

	% if a usefull item is close then pickup that item
	if bel(	neededItem(Label, ItemType), item(UnrealID, Label, ItemType, _), distance(UnrealID, Distance), Distance < 1500 )
		navigate(UnrealID).
	
    % Modules for the three possible flagstates.
  	if bel( otherTeam(Team), flagState(Team, home) )
  		then home.

  	if bel( otherTeam(Team), flagState(Team, held) )
  		then held.

  	if bel( otherTeam(Team), flagState(Team, dropped) )
  		then dropped.
  }
}

module home[exit=always] {
  program {
		% This makes sure that if the agent is not navigating, it tries to go to the other base in the hope of picking up a flag
		if bel( not(navigation(navigating, _)), not(holdingFlag), otherTeam(Team), base(Team, BasePos) )
			then navigate(BasePos).
  }
}

module held[exit=always] {
  program {
		% If we're carrying the flag, go to our own base
		if bel( not(navigation(navigating, _)), holdingFlag, ownTeam(Team), base(Team, BasePos) )
			then navigate(BasePos).
			
		% If another bot is holding the flag defend that bot, that bot will get a new role from the manager.
		% If no role change go to other base
		if true then home.
  }
}

module dropped[exit=always] {
  program {
	  % TODO: go to last known flag location.
	  
	  % If the flag is not at the last known location pretend the enemy flag is at the base to get the flag after it resets.
	  if true then home.
  }
}
